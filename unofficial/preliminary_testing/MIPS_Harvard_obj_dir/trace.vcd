$version Generated by VerilatedVcd $end
$date Sun Dec 13 00:58:11 2020
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 %- active $end
  $var wire  1 s, clk $end
  $var wire  1 5- clk_enable $end
  $var wire 32 M- data_address [31:0] $end
  $var wire  1 ]- data_read $end
  $var wire 32 m- data_readdata [31:0] $end
  $var wire  1 U- data_write $end
  $var wire 32 e- data_writedata [31:0] $end
  $var wire 32 =- instr_address [31:0] $end
  $var wire 32 E- instr_readdata [31:0] $end
  $var wire 32 -- register_v0 [31:0] $end
  $var wire  1 {, reset $end
  $scope module mips_cpu_harvard $end
   $var wire 32 u! ALU_HI_output_execute [31:0] $end
   $var wire 32 3, ALU_HI_output_memory [31:0] $end
   $var wire 32 c, ALU_HI_output_writeback [31:0] $end
   $var wire 32 }! ALU_LO_output_execute [31:0] $end
   $var wire 32 ;, ALU_LO_output_memory [31:0] $end
   $var wire 32 k, ALU_LO_output_writeback [31:0] $end
   $var wire  6 %! ALU_function_decode [5:0] $end
   $var wire  6 7& ALU_function_execute [5:0] $end
   $var wire 32 m! ALU_output_execute [31:0] $end
   $var wire 32 q' ALU_output_memory [31:0] $end
   $var wire 32 #( ALU_output_memory_resolved [31:0] $end
   $var wire 32 C( ALU_output_writeback [31:0] $end
   $var wire  2 k ALU_src_B_decode [1:0] $end
   $var wire  2 /& ALU_src_B_execute [1:0] $end
   $var wire  1 %% HALT_decode $end
   $var wire  1 W& HALT_execute $end
   $var wire  1 {$ HALT_fetch $end
   $var wire  1 i' HALT_memory $end
   $var wire  1 ;( HALT_writeback $end
   $var wire  1 E! HI_register_write_decode $end
   $var wire  1 Y+ HI_register_write_execute $end
   $var wire  1 #, HI_register_write_memory $end
   $var wire  1 K, HI_register_write_writeback $end
   $var wire  1 M! LO_register_write_decode $end
   $var wire  1 a+ LO_register_write_execute $end
   $var wire  1 +, LO_register_write_memory $end
   $var wire  1 S, LO_register_write_writeback $end
   $var wire  5 U% Rd_decode [4:0] $end
   $var wire  5 !' Rd_execute [4:0] $end
   $var wire  5 E% Rs_decode [4:0] $end
   $var wire  5 o& Rs_execute [4:0] $end
   $var wire  5 M% Rt_decode [4:0] $end
   $var wire  5 w& Rt_execute [4:0] $end
   $var wire  1 %- active $end
   $var wire  1 { branch_decode $end
   $var wire  1 s, clk $end
   $var wire  1 5- clk_enable $end
   $var wire 32 K$ comparator_1 [31:0] $end
   $var wire 32 S$ comparator_2 [31:0] $end
   $var wire 32 M- data_address [31:0] $end
   $var wire  1 ]- data_read $end
   $var wire 32 m- data_readdata [31:0] $end
   $var wire  1 U- data_write $end
   $var wire 32 e- data_writedata [31:0] $end
   $var wire  1 3$ equal_decode $end
   $var wire  1 u- flush_decode_execute_register $end
   $var wire  1 ?" flush_execute_register $end
   $var wire  1 /. flush_fetch_decode_register $end
   $var wire  1 S( forward_A_decode $end
   $var wire  3 G" forward_A_execute [2:0] $end
   $var wire  1 [( forward_B_decode $end
   $var wire  3 O" forward_B_execute [2:0] $end
   $var wire 16 ]% immediate [15:0] $end
   $var wire 32 =- instr_address [31:0] $end
   $var wire 32 E- instr_readdata [31:0] $end
   $var wire 32 -% instruction_decode [31:0] $end
   $var wire 32 E- instruction_fetch [31:0] $end
   $var wire  1 [$ internal_clk $end
   $var wire  1 =! j_instruction_decode $end
   $var wire  1 G& j_instruction_execute $end
   $var wire  1 a' j_instruction_memory $end
   $var wire 26 e% j_offset [25:0] $end
   $var wire 32 m% j_program_counter_decode [31:0] $end
   $var wire 32 A' j_program_counter_execute [31:0] $end
   $var wire 32 +( j_program_counter_memory [31:0] $end
   $var wire  1 [ memory_to_register_decode $end
   $var wire  1 }% memory_to_register_execute $end
   $var wire  1 I' memory_to_register_memory $end
   $var wire  1 3( memory_to_register_writeback $end
   $var wire  1 c memory_write_decode $end
   $var wire  1 '& memory_write_execute $end
   $var wire  1 Q' memory_write_memory $end
   $var wire  6 =% op [5:0] $end
   $var wire 32 # program_counter_branch_decode [31:0] $end
   $var wire 32 k$ program_counter_fetch [31:0] $end
   $var wire  1 -! program_counter_multiplexer_jump_decode $end
   $var wire  1 ?& program_counter_multiplexer_jump_execute $end
   $var wire  1 Y' program_counter_multiplexer_jump_memory $end
   $var wire 32 ; program_counter_mux_1_out [31:0] $end
   $var wire 32 1' program_counter_plus_eight_execute [31:0] $end
   $var wire 32 5% program_counter_plus_four_decode [31:0] $end
   $var wire 32 9' program_counter_plus_four_execute [31:0] $end
   $var wire 32 s$ program_counter_plus_four_fetch [31:0] $end
   $var wire 32 #$ program_counter_prime [31:0] $end
   $var wire  1 +$ program_counter_src_decode $end
   $var wire  5 E% read_address_1 [4:0] $end
   $var wire  5 M% read_address_2 [4:0] $end
   $var wire 32 m- read_data_memory [31:0] $end
   $var wire 32 K( read_data_writeback [31:0] $end
   $var wire  2 s register_destination_decode [1:0] $end
   $var wire  2 u% register_destination_execute [1:0] $end
   $var wire  1 '. register_file_memory_mux_memory $end
   $var wire 32 ;$ register_file_output_A_decode [31:0] $end
   $var wire 32 C$ register_file_output_B_decode [31:0] $end
   $var wire 32 k( register_file_output_HI_decode [31:0] $end
   $var wire 32 c( register_file_output_LO_decode [31:0] $end
   $var wire 32 -- register_v0 [31:0] $end
   $var wire  1 S register_write_decode $end
   $var wire  1 i+ register_write_execute $end
   $var wire  1 q+ register_write_memory $end
   $var wire  1 C, register_write_writeback $end
   $var wire  1 {, reset $end
   $var wire 32 '" result_writeback [31:0] $end
   $var wire 32 + shifter_output_decode [31:0] $end
   $var wire 32 3 sign_imm_decode [31:0] $end
   $var wire 32 )' sign_imm_execute [31:0] $end
   $var wire 32 ]! src_A_ALU_execute [31:0] $end
   $var wire 32 C src_A_decode [31:0] $end
   $var wire 32 _& src_A_execute [31:0] $end
   $var wire 32 e! src_B_ALU_execute [31:0] $end
   $var wire 32 K src_B_decode [31:0] $end
   $var wire 32 g& src_B_execute [31:0] $end
   $var wire  1 7" stall_decode $end
   $var wire  1 /" stall_fetch $end
   $var wire  1 5! using_HI_LO_decode $end
   $var wire  1 O& using_HI_LO_execute $end
   $var wire 32 }- write_data_execute [31:0] $end
   $var wire 32 y' write_data_memory [31:0] $end
   $var wire  5 U! write_register_execute [4:0] $end
   $var wire  5 y+ write_register_memory [4:0] $end
   $var wire  5 [, write_register_writeback [4:0] $end
   $scope module adder_decode $end
    $var wire 32 + a [31:0] $end
    $var wire 32 5% b [31:0] $end
    $var wire 32 # z [31:0] $end
   $upscope $end
   $scope module alu $end
    $var wire 64 a# ALU_HI_LO_output [63:0] $end
    $var wire 32 u! ALU_HI_output [31:0] $end
    $var wire 32 }! ALU_LO_output [31:0] $end
    $var wire  6 7& ALU_operation [5:0] $end
    $var wire 32 m! ALU_output [31:0] $end
    $var wire 64 A# extended_input_1 [63:0] $end
    $var wire 64 Q# extended_input_2 [63:0] $end
    $var wire 32 ]! input_1 [31:0] $end
    $var wire 32 e! input_2 [31:0] $end
    $var wire  5 w" shift_amount [4:0] $end
    $var wire 64 !# sign_extened_input_1 [63:0] $end
    $var wire 64 1# sign_extened_input_2 [63:0] $end
   $upscope $end
   $scope module alu_input_mux $end
    $var wire 32 3, ALU_HI_output_memory [31:0] $end
    $var wire 32 ;, ALU_LO_output_memory [31:0] $end
    $var wire 32 q' ALU_output_memory [31:0] $end
    $var wire  2 /& ALU_src_B_execute [1:0] $end
    $var wire 32 c, HI_result_writeback [31:0] $end
    $var wire 32 k, LO_result_writeback [31:0] $end
    $var wire  3 G" forward_one_execute [2:0] $end
    $var wire  3 O" forward_two_execute [2:0] $end
    $var wire 32 1' program_counter_plus_eight_execute [31:0] $end
    $var wire 32 _& read_data_1_reg [31:0] $end
    $var wire 32 g& read_data_2_reg [31:0] $end
    $var wire 32 '" result_writeback [31:0] $end
    $var wire 32 )' sign_imm_execute [31:0] $end
    $var wire 32 ]! src_A_ALU_execute [31:0] $end
    $var wire 32 e! src_B_ALU_execute [31:0] $end
    $var wire 32 o" src_mux_input_0 [31:0] $end
   $upscope $end
   $scope module control_unit $end
    $var wire  6 %! ALU_function [5:0] $end
    $var wire  2 k ALU_src_B [1:0] $end
    $var wire  1 E! HI_register_write $end
    $var wire  1 M! LO_register_write $end
    $var wire  1 { branch $end
    $var wire  6 g" funct [5:0] $end
    $var wire 32 -% instruction [31:0] $end
    $var wire  1 =! j_instruction $end
    $var wire  1 [ memory_to_register $end
    $var wire  1 c memory_write $end
    $var wire  6 W" op [5:0] $end
    $var wire  1 -! program_counter_multiplexer_jump $end
    $var wire  2 s register_destination [1:0] $end
    $var wire  1 S register_write $end
    $var wire  5 _" rt [4:0] $end
    $var wire  1 5! using_HI_LO $end
   $upscope $end
   $scope module decode_execute_register $end
    $var wire  6 %! ALU_function_decode [5:0] $end
    $var wire  6 7& ALU_function_execute [5:0] $end
    $var wire  2 k ALU_src_B_decode [1:0] $end
    $var wire  2 /& ALU_src_B_execute [1:0] $end
    $var wire  1 %% HALT_decode $end
    $var wire  1 W& HALT_execute $end
    $var wire  1 E! HI_register_write_decode $end
    $var wire  1 Y+ HI_register_write_execute $end
    $var wire  1 M! LO_register_write_decode $end
    $var wire  1 a+ LO_register_write_execute $end
    $var wire  5 U% Rd_decode [4:0] $end
    $var wire  5 !' Rd_execute [4:0] $end
    $var wire  5 E% Rs_decode [4:0] $end
    $var wire  5 o& Rs_execute [4:0] $end
    $var wire  5 M% Rt_decode [4:0] $end
    $var wire  5 w& Rt_execute [4:0] $end
    $var wire  1 ?" clear $end
    $var wire  1 [$ clk $end
    $var wire  1 =! j_instruction_decode $end
    $var wire  1 G& j_instruction_execute $end
    $var wire 32 m% j_program_counter_decode [31:0] $end
    $var wire 32 A' j_program_counter_execute [31:0] $end
    $var wire  1 [ memory_to_register_decode $end
    $var wire  1 }% memory_to_register_execute $end
    $var wire  1 c memory_write_decode $end
    $var wire  1 '& memory_write_execute $end
    $var wire  1 -! program_counter_multiplexer_jump_decode $end
    $var wire  1 ?& program_counter_multiplexer_jump_execute $end
    $var wire 32 5% program_counter_plus_four_decode [31:0] $end
    $var wire 32 9' program_counter_plus_four_execute [31:0] $end
    $var wire  2 s register_destination_decode [1:0] $end
    $var wire  2 u% register_destination_execute [1:0] $end
    $var wire  1 S register_write_decode $end
    $var wire  1 i+ register_write_execute $end
    $var wire  1 {, reset $end
    $var wire 32 3 sign_imm_decode [31:0] $end
    $var wire 32 )' sign_imm_execute [31:0] $end
    $var wire 32 C src_A_decode [31:0] $end
    $var wire 32 _& src_A_execute [31:0] $end
    $var wire 32 K src_B_decode [31:0] $end
    $var wire 32 g& src_B_execute [31:0] $end
    $var wire  1 5! using_HI_LO_decode $end
    $var wire  1 O& using_HI_LO_execute $end
   $upscope $end
   $scope module execute_memory_register $end
    $var wire 32 u! ALU_HI_output_execute [31:0] $end
    $var wire 32 3, ALU_HI_output_memory [31:0] $end
    $var wire 32 }! ALU_LO_output_execute [31:0] $end
    $var wire 32 ;, ALU_LO_output_memory [31:0] $end
    $var wire 32 m! ALU_output_execute [31:0] $end
    $var wire 32 q' ALU_output_memory [31:0] $end
    $var wire  1 W& HALT_execute $end
    $var wire  1 i' HALT_memory $end
    $var wire  1 Y+ HI_register_write_execute $end
    $var wire  1 #, HI_register_write_memory $end
    $var wire  1 a+ LO_register_write_execute $end
    $var wire  1 +, LO_register_write_memory $end
    $var wire  1 [$ clk $end
    $var wire  1 G& j_instruction_execute $end
    $var wire  1 a' j_instruction_memory $end
    $var wire 32 A' j_program_counter_execute [31:0] $end
    $var wire 32 +( j_program_counter_memory [31:0] $end
    $var wire  1 }% memory_to_register_execute $end
    $var wire  1 I' memory_to_register_memory $end
    $var wire  1 '& memory_write_execute $end
    $var wire  1 Q' memory_write_memory $end
    $var wire  1 ?& program_counter_multiplexer_jump_execute $end
    $var wire  1 Y' program_counter_multiplexer_jump_memory $end
    $var wire  1 i+ register_write_execute $end
    $var wire  1 q+ register_write_memory $end
    $var wire  1 {, reset $end
    $var wire 32 }- write_data_execute [31:0] $end
    $var wire 32 y' write_data_memory [31:0] $end
    $var wire  5 U! write_register_execute [4:0] $end
    $var wire  5 y+ write_register_memory [4:0] $end
   $upscope $end
   $scope module fetch_decode_register $end
    $var wire  1 %% HALT_decode $end
    $var wire  1 {$ HALT_fetch $end
    $var wire  1 +$ clear $end
    $var wire  1 [$ clk $end
    $var wire  1 7" enable $end
    $var wire 32 -% instruction_decode [31:0] $end
    $var wire 32 E- instruction_fetch [31:0] $end
    $var wire 32 5% program_counter_plus_four_decode [31:0] $end
    $var wire 32 s$ program_counter_plus_four_fetch [31:0] $end
    $var wire  1 {, reset $end
   $upscope $end
   $scope module hazard_unit $end
    $var wire  1 #, HI_register_write_memory $end
    $var wire  1 K, HI_register_write_writeback $end
    $var wire  1 +, LO_register_write_memory $end
    $var wire  1 S, LO_register_write_writeback $end
    $var wire  5 E% Rs_decode [4:0] $end
    $var wire  5 o& Rs_execute [4:0] $end
    $var wire  5 M% Rt_decode [4:0] $end
    $var wire  5 w& Rt_execute [4:0] $end
    $var wire  1 { branch_decode $end
    $var wire  1 y# branchstall $end
    $var wire  1 ?" flush_execute_register $end
    $var wire  1 S( forward_register_file_output_A_decode $end
    $var wire  3 G" forward_register_file_output_A_execute [2:0] $end
    $var wire  1 [( forward_register_file_output_B_decode $end
    $var wire  3 O" forward_register_file_output_B_execute [2:0] $end
    $var wire  1 q# lwstall $end
    $var wire  1 }% memory_to_register_execute $end
    $var wire  1 I' memory_to_register_memory $end
    $var wire  1 ?& program_counter_multiplexer_jump_execute $end
    $var wire  1 i+ register_write_execute $end
    $var wire  1 q+ register_write_memory $end
    $var wire  1 C, register_write_writeback $end
    $var wire  1 7" stall_decode $end
    $var wire  1 /" stall_fetch $end
    $var wire  1 O& using_HI_LO_execute $end
    $var wire  5 U! write_register_execute [4:0] $end
    $var wire  5 y+ write_register_memory [4:0] $end
    $var wire  5 [, write_register_writeback [4:0] $end
   $upscope $end
   $scope module memory_writeback_register $end
    $var wire 32 3, ALU_HI_output_memory [31:0] $end
    $var wire 32 c, ALU_HI_output_writeback [31:0] $end
    $var wire 32 ;, ALU_LO_output_memory [31:0] $end
    $var wire 32 k, ALU_LO_output_writeback [31:0] $end
    $var wire 32 q' ALU_output_memory [31:0] $end
    $var wire 32 C( ALU_output_writeback [31:0] $end
    $var wire  1 i' HALT_memory $end
    $var wire  1 ;( HALT_writeback $end
    $var wire  1 #, HI_register_write_memory $end
    $var wire  1 K, HI_register_write_writeback $end
    $var wire  1 +, LO_register_write_memory $end
    $var wire  1 S, LO_register_write_writeback $end
    $var wire  1 [$ clk $end
    $var wire  1 I' memory_to_register_memory $end
    $var wire  1 3( memory_to_register_writeback $end
    $var wire 32 m- read_data_memory [31:0] $end
    $var wire 32 K( read_data_writeback [31:0] $end
    $var wire  1 q+ register_write_memory $end
    $var wire  1 C, register_write_writeback $end
    $var wire  1 {, reset $end
    $var wire  5 y+ write_register_memory [4:0] $end
    $var wire  5 [, write_register_writeback [4:0] $end
   $upscope $end
   $scope module pc $end
    $var wire 32 #$ address_input [31:0] $end
    $var wire 32 k$ address_output [31:0] $end
    $var wire  1 [$ clk $end
    $var wire  1 /" enable $end
    $var wire  1 {$ halt $end
    $var wire  1 {, reset $end
   $upscope $end
   $scope module plus_four_adder $end
    $var wire 32 k$ a [31:0] $end
    $var wire 32 ?. b [31:0] $end
    $var wire 32 s$ z [31:0] $end
   $upscope $end
   $scope module plus_four_adder_execute $end
    $var wire 32 ?. a [31:0] $end
    $var wire 32 9' b [31:0] $end
    $var wire 32 1' z [31:0] $end
   $upscope $end
   $scope module program_counter_multiplexer $end
    $var wire 32 G. BUS_WIDTH [31:0] $end
    $var wire  1 +$ control $end
    $var wire 32 s$ input_0 [31:0] $end
    $var wire 32 # input_1 [31:0] $end
    $var wire 32 ; resolved [31:0] $end
   $upscope $end
   $scope module program_counter_multiplexer_two $end
    $var wire 32 G. BUS_WIDTH [31:0] $end
    $var wire  1 Y' control $end
    $var wire 32 ; input_0 [31:0] $end
    $var wire 32 #( input_1 [31:0] $end
    $var wire 32 #$ resolved [31:0] $end
   $upscope $end
   $scope module reg_output_comparator $end
    $var wire 32 K$ a [31:0] $end
    $var wire 32 S$ b [31:0] $end
    $var wire  1 3$ c $end
    $var wire  6 =% op [5:0] $end
    $var wire  5 M% rt [4:0] $end
   $upscope $end
   $scope module register_file $end
    $var wire 32 k( HI_reg [31:0] $end
    $var wire 32 c, HI_write_data [31:0] $end
    $var wire  1 K, HI_write_enable $end
    $var wire 32 c( LO_reg [31:0] $end
    $var wire 32 k, LO_write_data [31:0] $end
    $var wire  1 S, LO_write_enable $end
    $var wire  1 [$ clk $end
    $var wire  1 c$ modified_write_clk $end
    $var wire  1 7. pipelined $end
    $var wire  5 E% read_address_1 [4:0] $end
    $var wire  5 M% read_address_2 [4:0] $end
    $var wire 32 ;$ read_data_1 [31:0] $end
    $var wire 32 C$ read_data_2 [31:0] $end
    $var wire 32 k( read_data_HI [31:0] $end
    $var wire 32 c( read_data_LO [31:0] $end
    $var wire 32 -- read_register_2 [31:0] $end
    $var wire 32 s( registers(0) [31:0] $end
    $var wire 32 t( registers(1) [31:0] $end
    $var wire 32 }( registers(10) [31:0] $end
    $var wire 32 ~( registers(11) [31:0] $end
    $var wire 32 !) registers(12) [31:0] $end
    $var wire 32 ") registers(13) [31:0] $end
    $var wire 32 #) registers(14) [31:0] $end
    $var wire 32 $) registers(15) [31:0] $end
    $var wire 32 %) registers(16) [31:0] $end
    $var wire 32 &) registers(17) [31:0] $end
    $var wire 32 ') registers(18) [31:0] $end
    $var wire 32 () registers(19) [31:0] $end
    $var wire 32 u( registers(2) [31:0] $end
    $var wire 32 )) registers(20) [31:0] $end
    $var wire 32 *) registers(21) [31:0] $end
    $var wire 32 +) registers(22) [31:0] $end
    $var wire 32 ,) registers(23) [31:0] $end
    $var wire 32 -) registers(24) [31:0] $end
    $var wire 32 .) registers(25) [31:0] $end
    $var wire 32 /) registers(26) [31:0] $end
    $var wire 32 0) registers(27) [31:0] $end
    $var wire 32 1) registers(28) [31:0] $end
    $var wire 32 2) registers(29) [31:0] $end
    $var wire 32 v( registers(3) [31:0] $end
    $var wire 32 3) registers(30) [31:0] $end
    $var wire 32 4) registers(31) [31:0] $end
    $var wire 32 w( registers(4) [31:0] $end
    $var wire 32 x( registers(5) [31:0] $end
    $var wire 32 y( registers(6) [31:0] $end
    $var wire 32 z( registers(7) [31:0] $end
    $var wire 32 {( registers(8) [31:0] $end
    $var wire 32 |( registers(9) [31:0] $end
    $var wire  5 [, write_address [4:0] $end
    $var wire 32 '" write_data [31:0] $end
    $var wire  1 C, write_enable $end
   $upscope $end
   $scope module write_register_execute_mux $end
    $var wire 32 O. BUS_WIDTH [31:0] $end
    $var wire  2 u% control [1:0] $end
    $var wire  5 w& input_0 [4:0] $end
    $var wire  5 !' input_1 [4:0] $end
    $var wire  5 W. input_2 [4:0] $end
    $var wire  5 _. input_3 [4:0] $end
    $var wire  5 U! resolved [4:0] $end
   $upscope $end
   $scope module writeback_mux $end
    $var wire 32 G. BUS_WIDTH [31:0] $end
    $var wire  1 3( control $end
    $var wire 32 C( input_0 [31:0] $end
    $var wire 32 K( input_1 [31:0] $end
    $var wire 32 '" resolved [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b00000000000000000000000000000100 ;
b00000000000000000000000000000000 C
b00000000000000000000000000000000 K
1S
0[
0c
b00 k
b01 s
0{
b000000 %!
0-!
05!
0=!
0E!
0M!
b00000 U!
b00000000000000000000000000000000 ]!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 m!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 '"
0/"
07"
0?"
b000 G"
b000 O"
b000000 W"
b00000 _"
b000000 g"
b00000000000000000000000000000000 o"
b00000 w"
b0000000000000000000000000000000000000000000000000000000000000000 !#
b0000000000000000000000000000000000000000000000000000000000000000 1#
b0000000000000000000000000000000000000000000000000000000000000000 A#
b0000000000000000000000000000000000000000000000000000000000000000 Q#
b0000000000000000000000000000000000000000000000000000000000000000 a#
0q#
0y#
b00000000000000000000000000000100 #$
0+$
03$
b00000000000000000000000000000000 ;$
b00000000000000000000000000000000 C$
b00000000000000000000000000000000 K$
b00000000000000000000000000000000 S$
0[$
1c$
b00000000000000000000000000000000 k$
b00000000000000000000000000000100 s$
0{$
0%%
b00000000000000000000000000000000 -%
b00000000000000000000000000000000 5%
b000000 =%
b00000 E%
b00000 M%
b00000 U%
b0000000000000000 ]%
b00000000000000000000000000 e%
b00000000000000000000000000000000 m%
b00 u%
0}%
0'&
b00 /&
b000000 7&
0?&
0G&
0O&
0W&
b00000000000000000000000000000000 _&
b00000000000000000000000000000000 g&
b00000 o&
b00000 w&
b00000 !'
b00000000000000000000000000000000 )'
b00000000000000000000000000000100 1'
b00000000000000000000000000000000 9'
b00000000000000000000000000000000 A'
0I'
0Q'
0Y'
0a'
0i'
b00000000000000000000000000000000 q'
b00000000000000000000000000000000 y'
b00000000000000000000000000000000 #(
b00000000000000000000000000000000 +(
03(
0;(
b00000000000000000000000000000000 C(
b00000000000000000000000000000000 K(
0S(
0[(
b00000000000000000000000000000000 c(
b00000000000000000000000000000000 k(
b00000000000000000000000000000000 s(
b00000000000000000000000000000000 t(
b00000000000000000000000000000000 u(
b00000000000000000000000000000000 v(
b00000000000000000000000000000000 w(
b00000000000000000000000000000000 x(
b00000000000000000000000000000000 y(
b00000000000000000000000000000000 z(
b00000000000000000000000000000000 {(
b00000000000000000000000000000000 |(
b00000000000000000000000000000000 }(
b00000000000000000000000000000000 ~(
b00000000000000000000000000000000 !)
b00000000000000000000000000000000 ")
b00000000000000000000000000000000 #)
b00000000000000000000000000000000 $)
b00000000000000000000000000000000 %)
b00000000000000000000000000000000 &)
b00000000000000000000000000000000 ')
b00000000000000000000000000000000 ()
b00000000000000000000000000000000 ))
b00000000000000000000000000000000 *)
b00000000000000000000000000000000 +)
b00000000000000000000000000000000 ,)
b00000000000000000000000000000000 -)
b00000000000000000000000000000000 .)
b00000000000000000000000000000000 /)
b00000000000000000000000000000000 0)
b00000000000000000000000000000000 1)
b00000000000000000000000000000000 2)
b00000000000000000000000000000000 3)
b00000000000000000000000000000000 4)
0Y+
0a+
0i+
0q+
b00000 y+
0#,
0+,
b00000000000000000000000000000000 3,
b00000000000000000000000000000000 ;,
0C,
0K,
0S,
b00000 [,
b00000000000000000000000000000000 c,
b00000000000000000000000000000000 k,
0s,
1{,
1%-
b00000000000000000000000000000000 --
15-
b00000000000000000000000000000000 =-
b00000000000000000000000000000000 E-
b00000000000000000000000000000000 M-
0U-
0]-
b00000000000000000000000000000000 e-
b00000000000000000000000000000000 m-
0u-
b00000000000000000000000000000000 }-
0'.
0/.
17.
b00000000000000000000000000000100 ?.
b00000000000000000000000000100000 G.
b00000000000000000000000000000101 O.
b11111 W.
b00000 _.
#2
b10111111110000000000000000000100 ;
b10111111110000000000000000000100 #$
1[$
0c$
b10111111110000000000000000000000 k$
b10111111110000000000000000000100 s$
1s,
b10111111110000000000000000000000 =-
#3
0[$
1c$
0s,
#3
0{,
#4
b10111111110000000000000000000100 #
b10111111110000000000000000001000 ;
b10111111110000000000000000001000 #$
1[$
0c$
b10111111110000000000000000000100 k$
b10111111110000000000000000001000 s$
b10111111110000000000000000000100 5%
b10110000000000000000000000000000 m%
b01 u%
1i+
1s,
b10111111110000000000000000000100 =-
b00100100000111000000000100000000 E-
#5
0[$
1c$
0s,
#5
#6
b10111111110000000000010000001000 #
b00000000000000000000010000000000 +
b00000000000000000000000100000000 3
b10111111110000000000000000001100 ;
b01 k
b00 s
b100001 %!
b001001 W"
b11100 _"
b10111111110000000000000000001100 #$
1[$
0c$
b10111111110000000000000000001000 k$
b10111111110000000000000000001100 s$
b00100100000111000000000100000000 -%
b10111111110000000000000000001000 5%
b001001 =%
b11100 M%
b0000000100000000 ]%
b00000111000000000100000000 e%
b10110000011100000000010000000000 m%
b10111111110000000000000000001000 1'
b10111111110000000000000000000100 9'
b10110000000000000000000000000000 A'
1q+
1s,
b10111111110000000000000000001000 =-
b00100100000000011111111111111111 E-
#7
0[$
1c$
0s,
#7
#8
b10111111110000000000000000001000 #
b11111111111111111111111111111100 +
b11111111111111111111111111111111 3
b10111111110000000000000000010000 ;
b11100 U!
b00000000000000000000000100000000 e!
b00000000000000000000000100000000 m!
b00001 _"
b111111 g"
b0000000000000000000000000000000000000000000000000000000100000000 1#
b0000000000000000000000000000000000000000000000000000000100000000 Q#
b10111111110000000000000000010000 #$
1[$
0c$
b10111111110000000000000000001100 k$
b10111111110000000000000000010000 s$
b00100100000000011111111111111111 -%
b10111111110000000000000000001100 5%
b00001 M%
b11111 U%
b1111111111111111 ]%
b00000000011111111111111111 e%
b10110000000001111111111111111100 m%
b00 u%
b01 /&
b100001 7&
b11100 w&
b00000000000000000000000100000000 )'
b10111111110000000000000000001100 1'
b10111111110000000000000000001000 9'
b10110000011100000000010000000000 A'
b10110000000000000000000000000000 +(
1C,
1s,
b10111111110000000000000000001100 =-
b00000011100000010000000000011000 E-
#9
0[$
1c$
0s,
#9
#10
b10111111110000000000000001110000 #
b00000000000000000000000001100000 +
b00000000000000000000000000011000 3
b10111111110000000000000000010100 ;
b00 k
b01 s
b011000 %!
1E!
1M!
b00001 U!
b11111111111111111111111111111111 e!
b11111111111111111111111111111111 m!
b000000 W"
b011000 g"
b1111111111111111111111111111111111111111111111111111111111111111 1#
b0000000000000000000000000000000011111111111111111111111111111111 Q#
b10111111110000000000000000010100 #$
b00000000000000000000000100000000 K$
1[$
0c$
b10111111110000000000000000010000 k$
b10111111110000000000000000010100 s$
b00000011100000010000000000011000 -%
b10111111110000000000000000010000 5%
b000000 =%
b11100 E%
b00000 U%
b0000000000011000 ]%
b11100000010000000000011000 e%
b10111110000001000000000001100000 m%
b00001 w&
b11111 !'
b11111111111111111111111111111111 )'
b10111111110000000000000000010000 1'
b10111111110000000000000000001100 9'
b10110000000001111111111111111100 A'
b00000000000000000000000100000000 q'
b00000000000000000000000100000000 #(
b10110000011100000000010000000000 +(
1S(
b11100 y+
1s,
b10111111110000000000000000010000 =-
b00000000000000000000000000000000 E-
b00000000000000000000000100000000 M-
#11
0[$
1c$
0s,
#11
#12
b10111111110000000000000000010100 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b10111111110000000000000000011000 ;
b000000 %!
0E!
0M!
b00000 U!
b00000000000000000000000100000000 ]!
b00000000000000000000000000000000 m!
b11111111111111111111111111111111 u!
b11111111111111111111111100000000 }!
b00000000000000000000000100000000 '"
b001 G"
b010 O"
b00000 _"
b000000 g"
b11111111111111111111111111111111 o"
b00100 w"
b0000000000000000000000000000000000000000000000000000000100000000 !#
b0000000000000000000000000000000000000000000000000000000100000000 A#
b1111111111111111111111111111111111111111111111111111111100000000 a#
b10111111110000000000000000011000 #$
b00000000000000000000000000000000 K$
1[$
0c$
b10111111110000000000000000010100 k$
b10111111110000000000000000011000 s$
b00000000000000000000000000000000 -%
b10111111110000000000000000010100 5%
b00000 E%
b00000 M%
b0000000000000000 ]%
b00000000000000000000000000 e%
b10110000000000000000000000000000 m%
b01 u%
b00 /&
b011000 7&
b11100 o&
b00000 !'
b00000000000000000000000000011000 )'
b10111111110000000000000000010100 1'
b10111111110000000000000000010000 9'
b10111110000001000000000001100000 A'
b11111111111111111111111111111111 q'
b11111111111111111111111111111111 #(
b10110000000001111111111111111100 +(
b00000000000000000000000100000000 C(
0S(
1Y+
1a+
b00001 y+
b11100 [,
1s,
b10111111110000000000000000010100 =-
b11111111111111111111111111111111 M-
#13
0[$
1c$
b00000000000000000000000100000000 1)
0s,
#13
#14
b10111111110000000000000000011000 #
b10111111110000000000000000011100 ;
b00000000000000000000000000000000 ]!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 u!
b00000000000000000000000000000000 }!
b11111111111111111111111111111111 '"
b000 G"
b000 O"
b00000000000000000000000000000000 o"
b00000 w"
b0000000000000000000000000000000000000000000000000000000000000000 !#
b0000000000000000000000000000000000000000000000000000000000000000 1#
b0000000000000000000000000000000000000000000000000000000000000000 A#
b0000000000000000000000000000000000000000000000000000000000000000 Q#
b0000000000000000000000000000000000000000000000000000000000000000 a#
b10111111110000000000000000011100 #$
1[$
0c$
b10111111110000000000000000011000 k$
b10111111110000000000000000011100 s$
b10111111110000000000000000011000 5%
b000000 7&
b00000 o&
b00000 w&
b00000000000000000000000000000000 )'
b10111111110000000000000000011000 1'
b10111111110000000000000000010100 9'
b10110000000000000000000000000000 A'
b00000000000000000000000000000000 q'
b00000000000000000000000000000000 #(
b10111110000001000000000001100000 +(
b11111111111111111111111111111111 C(
0Y+
0a+
b00000 y+
1#,
1+,
b11111111111111111111111111111111 3,
b11111111111111111111111100000000 ;,
b00001 [,
1s,
b10111111110000000000000000011000 =-
b00000000000000000001000000010000 E-
b00000000000000000000000000000000 M-
#15
0[$
1c$
b11111111111111111111111111111111 t(
0s,
#15
#16
b10111111110000000100000001011100 #
b00000000000000000100000001000000 +
b00000000000000000001000000010000 3
b10111111110000000000000000100000 ;
b111110 %!
15!
b00000000000000000000000000000000 '"
b010000 g"
b10111111110000000000000000100000 #$
1[$
0c$
b10111111110000000000000000011100 k$
b10111111110000000000000000100000 s$
b00000000000000000001000000010000 -%
b10111111110000000000000000011100 5%
b00010 U%
b0001000000010000 ]%
b00000000000001000000010000 e%
b10110000000000000100000001000000 m%
b10111111110000000000000000011100 1'
b10111111110000000000000000011000 9'
b10110000000000000000000000000000 +(
b00000000000000000000000000000000 C(
0#,
0+,
b00000000000000000000000000000000 3,
b00000000000000000000000000000000 ;,
1K,
1S,
b00000 [,
b11111111111111111111111111111111 c,
b11111111111111111111111100000000 k,
1s,
b10111111110000000000000000011100 =-
b00000000000000000001100000010010 E-
#17
b11111111111111111111111100000000 C
b11111111111111111111111111111111 K
0[$
1c$
b11111111111111111111111100000000 c(
b11111111111111111111111111111111 k(
0s,
#17
#18
b10111111110000000110000001101000 #
b00000000000000000110000001001000 +
b00000000000000000001100000010010 3
b10111111110000000000000000100100 ;
b111111 %!
b00010 U!
b11111111111111111111111100000000 ]!
b11111111111111111111111111111111 e!
b11111111111111111111111100000000 m!
b010010 g"
b11111111111111111111111111111111 o"
b11100 w"
b1111111111111111111111111111111111111111111111111111111100000000 !#
b1111111111111111111111111111111111111111111111111111111111111111 1#
b0000000000000000000000000000000011111111111111111111111100000000 A#
b0000000000000000000000000000000011111111111111111111111111111111 Q#
b10111111110000000000000000100100 #$
1[$
0c$
b10111111110000000000000000100000 k$
b10111111110000000000000000100100 s$
b00000000000000000001100000010010 -%
b10111111110000000000000000100000 5%
b00011 U%
b0001100000010010 ]%
b00000000000001100000010010 e%
b10110000000000000110000001001000 m%
b111110 7&
1O&
b11111111111111111111111100000000 _&
b11111111111111111111111111111111 g&
b00010 !'
b00000000000000000001000000010000 )'
b10111111110000000000000000100000 1'
b10111111110000000000000000011100 9'
b10110000000000000100000001000000 A'
0K,
0S,
b00000000000000000000000000000000 c,
b00000000000000000000000000000000 k,
1s,
b10111111110000000000000000100000 =-
b00000000000000000000000000000000 E-
#19
0[$
1c$
0s,
#19
#20
b10111111110000000000000000100100 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b10111111110000000000000000101000 ;
b00000000000000000000000000000000 C
b00000000000000000000000000000000 K
b000000 %!
05!
b00011 U!
b11111111111111111111111111111111 m!
b000000 g"
b10111111110000000000000000101000 #$
1[$
0c$
b10111111110000000000000000100100 k$
b10111111110000000000000000101000 s$
b00000000000000000000000000000000 -%
b10111111110000000000000000100100 5%
b00000 U%
b0000000000000000 ]%
b00000000000000000000000000 e%
b10110000000000000000000000000000 m%
b111111 7&
b00011 !'
b00000000000000000001100000010010 )'
b10111111110000000000000000100100 1'
b10111111110000000000000000100000 9'
b10110000000000000110000001001000 A'
b11111111111111111111111100000000 q'
b11111111111111111111111100000000 #(
b10110000000000000100000001000000 +(
b00010 y+
1s,
b10111111110000000000000000100100 =-
b11111111111111111111111100000000 M-
#21
0[$
1c$
0s,
#21
#22
b10111111110000000000000000101000 #
b10111111110000000000000000101100 ;
b00000 U!
b00000000000000000000000000000000 ]!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 m!
b11111111111111111111111100000000 '"
b00000000000000000000000000000000 o"
b00000 w"
b0000000000000000000000000000000000000000000000000000000000000000 !#
b0000000000000000000000000000000000000000000000000000000000000000 1#
b0000000000000000000000000000000000000000000000000000000000000000 A#
b0000000000000000000000000000000000000000000000000000000000000000 Q#
b10111111110000000000000000101100 #$
1[$
0c$
b10111111110000000000000000101000 k$
b10111111110000000000000000101100 s$
b10111111110000000000000000101000 5%
b000000 7&
0O&
b00000000000000000000000000000000 _&
b00000000000000000000000000000000 g&
b00000 !'
b00000000000000000000000000000000 )'
b10111111110000000000000000101000 1'
b10111111110000000000000000100100 9'
b10110000000000000000000000000000 A'
b11111111111111111111111111111111 q'
b11111111111111111111111111111111 #(
b10110000000000000110000001001000 +(
b11111111111111111111111100000000 C(
b00011 y+
b00010 [,
1s,
b10111111110000000000000000101000 =-
b11111111111111111111111111111111 M-
#23
0[$
1c$
b11111111111111111111111100000000 u(
0s,
b11111111111111111111111100000000 --
#23
#24
b10111111110000000000000000101100 #
b10111111110000000000000000110000 ;
b11111111111111111111111111111111 '"
b10111111110000000000000000110000 #$
1[$
0c$
b10111111110000000000000000101100 k$
b10111111110000000000000000110000 s$
b10111111110000000000000000101100 5%
b10111111110000000000000000101100 1'
b10111111110000000000000000101000 9'
b00000000000000000000000000000000 q'
b00000000000000000000000000000000 #(
b10110000000000000000000000000000 +(
b11111111111111111111111111111111 C(
b00000 y+
b00011 [,
1s,
b10111111110000000000000000101100 =-
b00000000000000000000000000000000 M-
#25
0[$
1c$
b11111111111111111111111111111111 v(
0s,
#25
#26
b10111111110000000000000000110000 #
b10111111110000000000000000110100 ;
b00000000000000000000000000000000 '"
b10111111110000000000000000110100 #$
1[$
0c$
b10111111110000000000000000110000 k$
b10111111110000000000000000110100 s$
b10111111110000000000000000110000 5%
b10111111110000000000000000110000 1'
b10111111110000000000000000101100 9'
b00000000000000000000000000000000 C(
b00000 [,
1s,
b10111111110000000000000000110000 =-
#27
0[$
1c$
0s,
#27
#28
b10111111110000000000000000110100 #
b10111111110000000000000000111000 ;
b10111111110000000000000000111000 #$
1[$
0c$
b10111111110000000000000000110100 k$
b10111111110000000000000000111000 s$
b10111111110000000000000000110100 5%
b10111111110000000000000000110100 1'
b10111111110000000000000000110000 9'
1s,
b10111111110000000000000000110100 =-
b00001100000000000000000000000000 E-
#29
0[$
1c$
0s,
#29
#30
b10111111110000000000000000111000 #
b10111111110000000000000000111100 ;
b10 k
b10 s
1{
b111111 %!
1-!
1=!
1/"
17"
1?"
b000011 W"
1y#
b10111111110000000000000000111100 #$
1[$
0c$
b10111111110000000000000000111000 k$
b10111111110000000000000000111100 s$
b00001100000000000000000000000000 -%
b10111111110000000000000000111000 5%
b000011 =%
b10111111110000000000000000111000 1'
b10111111110000000000000000110100 9'
1s,
b10111111110000000000000000111000 =-
b00000000000000000000000000000000 E-
#31
0[$
1c$
0s,
#31
#32
0/"
07"
0?"
0y#
1[$
0c$
b00 u%
b00000000000000000000000000000100 1'
b00000000000000000000000000000000 9'
b00000000000000000000000000000000 A'
0i+
1s,
#33
0[$
1c$
0s,
#33
#34
b10111111110000000000000000111100 #
b10111111110000000000000001000000 ;
b00 k
b01 s
0{
b000000 %!
0-!
0=!
b11111 U!
b10111111110000000000000000111100 e!
b10111111110000000000000000111100 m!
1/"
17"
b000000 W"
b1111111111111111111111111111111110111111110000000000000000111100 1#
b0000000000000000000000000000000010111111110000000000000000111100 Q#
b10111111110000000000000001000000 #$
1[$
0c$
b10111111110000000000000000111100 k$
b10111111110000000000000001000000 s$
b00000000000000000000000000000000 -%
b10111111110000000000000000111100 5%
b000000 =%
b10 u%
b10 /&
b111111 7&
1?&
1G&
b10111111110000000000000000111100 1'
b10111111110000000000000000111000 9'
b10110000000000000000000000000000 A'
b00000000000000000000000000000000 +(
1i+
0q+
1s,
b10111111110000000000000000111100 =-
#35
0[$
1c$
0s,
#35
#36
b00000 U!
b00000000000000000000000000000000 e!
b00000000000000000000000000000000 m!
0/"
07"
b0000000000000000000000000000000000000000000000000000000000000000 1#
b0000000000000000000000000000000000000000000000000000000000000000 Q#
b10110000000000000000000000000000 #$
1[$
0c$
b01 u%
b00 /&
b000000 7&
0?&
0G&
b10111111110000000000000001000000 1'
b10111111110000000000000000111100 9'
1Y'
1a'
b10111111110000000000000000111100 q'
b10110000000000000000000000000000 #(
b10110000000000000000000000000000 +(
1q+
b11111 y+
0C,
1s,
b10111111110000000000000000111100 M-
#37
0[$
1c$
0s,
#37
#38
b10111111110000000000000001000000 #
b10110000000000000000000000000100 ;
b10111111110000000000000000111100 '"
b10110000000000000000000000000100 #$
1[$
0c$
b10110000000000000000000000000000 k$
b10110000000000000000000000000100 s$
b10111111110000000000000001000000 5%
0Y'
0a'
b00000000000000000000000000000000 q'
b00000000000000000000000000000000 #(
b10111111110000000000000000111100 C(
b00000 y+
1C,
b11111 [,
1s,
b10110000000000000000000000000000 =-
b00000000000000000000000000000000 M-
#39
0[$
1c$
b10111111110000000000000000111100 4)
0s,
#39
#40
b10110000000000000000000000000100 #
b10110000000000000000000000001000 ;
b00000000000000000000000000000000 '"
b10110000000000000000000000001000 #$
1[$
0c$
b10110000000000000000000000000100 k$
b10110000000000000000000000001000 s$
b10110000000000000000000000000100 5%
b10111111110000000000000001000100 1'
b10111111110000000000000001000000 9'
b00000000000000000000000000000000 C(
b00000 [,
1s,
b10110000000000000000000000000100 =-
#41
0[$
1c$
0s,
#41
#42
b10110000000000000000000000001000 #
b10110000000000000000000000001100 ;
b10110000000000000000000000001100 #$
1[$
0c$
b10110000000000000000000000001000 k$
b10110000000000000000000000001100 s$
b10110000000000000000000000001000 5%
b10110000000000000000000000001000 1'
b10110000000000000000000000000100 9'
1s,
b10110000000000000000000000001000 =-
#43
0[$
1c$
0s,
#43
#44
b10110000000000000000000000001100 #
b10110000000000000000000000010000 ;
b10110000000000000000000000010000 #$
1[$
0c$
b10110000000000000000000000001100 k$
b10110000000000000000000000010000 s$
b10110000000000000000000000001100 5%
b10110000000000000000000000001100 1'
b10110000000000000000000000001000 9'
1s,
b10110000000000000000000000001100 =-
#45
0[$
1c$
0s,
#45
#46
b10110000000000000000000000010000 #
b10110000000000000000000000010100 ;
b10110000000000000000000000010100 #$
1[$
0c$
b10110000000000000000000000010000 k$
b10110000000000000000000000010100 s$
b10110000000000000000000000010000 5%
b10110000000000000000000000010000 1'
b10110000000000000000000000001100 9'
1s,
b10110000000000000000000000010000 =-
b00000000000000000000000000001000 E-
#47
0[$
1c$
0s,
#47
#48
b10110000000000000000000000110100 #
b00000000000000000000000000100000 +
b00000000000000000000000000001000 3
b10110000000000000000000000011000 ;
b001000 %!
1-!
b001000 g"
b10110000000000000000000000011000 #$
1[$
0c$
b10110000000000000000000000010100 k$
b10110000000000000000000000011000 s$
b00000000000000000000000000001000 -%
b10110000000000000000000000010100 5%
b0000000000001000 ]%
b00000000000000000000001000 e%
b10110000000000000000000000100000 m%
b10110000000000000000000000010100 1'
b10110000000000000000000000010000 9'
1s,
b10110000000000000000000000010100 =-
b00000000000000000000000000000000 E-
#49
0[$
1c$
0s,
#49
#50
b10110000000000000000000000011000 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b10110000000000000000000000011100 ;
b000000 %!
0-!
1/"
17"
b000000 g"
b10110000000000000000000000011100 #$
1[$
0c$
b10110000000000000000000000011000 k$
b10110000000000000000000000011100 s$
b00000000000000000000000000000000 -%
b10110000000000000000000000011000 5%
b0000000000000000 ]%
b00000000000000000000000000 e%
b10110000000000000000000000000000 m%
b001000 7&
1?&
b00000000000000000000000000001000 )'
b10110000000000000000000000011000 1'
b10110000000000000000000000010100 9'
b10110000000000000000000000100000 A'
1s,
b10110000000000000000000000011000 =-
#51
0[$
1c$
0s,
#51
#52
0/"
07"
b00000000000000000000000000000000 #$
1[$
0c$
b000000 7&
0?&
b00000000000000000000000000000000 )'
b10110000000000000000000000011100 1'
b10110000000000000000000000011000 9'
b10110000000000000000000000000000 A'
1Y'
b10110000000000000000000000100000 +(
1s,
#53
0[$
1c$
0s,
#53
#54
b10110000000000000000000000011100 #
b00000000000000000000000000000100 ;
b00000000000000000000000000000100 #$
1[$
0c$
b00000000000000000000000000000000 k$
b00000000000000000000000000000100 s$
1{$
b10110000000000000000000000011100 5%
0Y'
b10110000000000000000000000000000 +(
1s,
b00000000000000000000000000000000 =-
#55
0[$
1c$
0s,
#55
#56
b00000000000000000000000000000100 #
1[$
0c$
1%%
b00000000000000000000000000000100 5%
b00000000000000000000000000000000 m%
b10110000000000000000000000100000 1'
b10110000000000000000000000011100 9'
1s,
#57
0[$
1c$
0s,
#57
#58
1[$
0c$
1W&
b00000000000000000000000000001000 1'
b00000000000000000000000000000100 9'
b00000000000000000000000000000000 A'
1s,
#59
0[$
1c$
0s,
#59
#60
1[$
0c$
1i'
b00000000000000000000000000000000 +(
1s,
#61
0[$
1c$
0s,
#61
#62
1[$
0c$
1;(
1s,
0%-
#63
0[$
1c$
0s,
#63
b00000000000000000000000000000000 #
b10111111110000000000000000000100 ;
b10111111110000000000000000000100 #$
b10111111110000000000000000000000 k$
b10111111110000000000000000000100 s$
0{$
0%%
b00000000000000000000000000000000 5%
b00 u%
0W&
b00000000000000000000000000000100 1'
b00000000000000000000000000000000 9'
0i'
0;(
0i+
0q+
0C,
1{,
1%-
b10111111110000000000000000000000 =-
#64
1[$
0c$
1s,
#65
0[$
1c$
0s,
#65
0{,
#66
b10111111110000000000000000000100 #
b10111111110000000000000000001000 ;
b10111111110000000000000000001000 #$
1[$
0c$
b10111111110000000000000000000100 k$
b10111111110000000000000000001000 s$
b10111111110000000000000000000100 5%
b10110000000000000000000000000000 m%
b01 u%
1i+
1s,
b10111111110000000000000000000100 =-
b00010000000000000000000100000000 E-
#67
0[$
1c$
0s,
#67
#68
b10111111110000000000010000001000 #
b00000000000000000000010000000000 +
b00000000000000000000000100000000 3
b10111111110000000000010000001000 ;
0S
b00 s
1{
b111111 %!
1/"
17"
1?"
b000100 W"
1y#
b10111111110000000000010000001000 #$
1+$
13$
1[$
0c$
b10111111110000000000000000001000 k$
b10111111110000000000000000001100 s$
b00010000000000000000000100000000 -%
b10111111110000000000000000001000 5%
b000100 =%
b0000000100000000 ]%
b00000000000000000100000000 e%
b10110000000000000000010000000000 m%
b10111111110000000000000000001000 1'
b10111111110000000000000000000100 9'
b10110000000000000000000000000000 A'
1q+
1s,
b10111111110000000000000000001000 =-
b00001000000000000000000100000000 E-
#69
0[$
1c$
0s,
#69
#70
0/"
07"
0?"
0y#
1[$
0c$
b00 u%
b00000000000000000000000000000100 1'
b00000000000000000000000000000000 9'
b00000000000000000000000000000000 A'
b10110000000000000000000000000000 +(
0i+
1C,
1s,
#71
0[$
1c$
0s,
#71
#72
b00000000000000000000000000000000 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b10111111110000000000010000001100 ;
1S
b01 s
0{
b000000 %!
b000000 W"
b10111111110000000000010000001100 #$
0+$
03$
1[$
0c$
b10111111110000000000010000001000 k$
b10111111110000000000010000001100 s$
b00000000000000000000000000000000 -%
b00000000000000000000000000000000 5%
b000000 =%
b0000000000000000 ]%
b00000000000000000000000000 e%
b00000000000000000000000000000000 m%
b111111 7&
b00000000000000000000000100000000 )'
b10111111110000000000000000001100 1'
b10111111110000000000000000001000 9'
b10110000000000000000010000000000 A'
b00000000000000000000000000000000 +(
0q+
1s,
b10111111110000000000010000001000 =-
b00000000000000000000000000000000 E-
#73
0[$
1c$
0s,
#73
#74
b10111111110000000000010000001100 #
b10111111110000000000010000010000 ;
b10111111110000000000010000010000 #$
1[$
0c$
b10111111110000000000010000001100 k$
b10111111110000000000010000010000 s$
b10111111110000000000010000001100 5%
b10110000000000000000000000000000 m%
b01 u%
b000000 7&
b00000000000000000000000000000000 )'
b00000000000000000000000000000100 1'
b00000000000000000000000000000000 9'
b00000000000000000000000000000000 A'
b10110000000000000000010000000000 +(
1i+
0C,
1s,
b10111111110000000000010000001100 =-
b00000000000000000000000000001000 E-
#75
0[$
1c$
0s,
#75
#76
b10111111110000000000010000110000 #
b00000000000000000000000000100000 +
b00000000000000000000000000001000 3
b10111111110000000000010000010100 ;
b001000 %!
1-!
b001000 g"
b10111111110000000000010000010100 #$
1[$
0c$
b10111111110000000000010000010000 k$
b10111111110000000000010000010100 s$
b00000000000000000000000000001000 -%
b10111111110000000000010000010000 5%
b0000000000001000 ]%
b00000000000000000000001000 e%
b10110000000000000000000000100000 m%
b10111111110000000000010000010000 1'
b10111111110000000000010000001100 9'
b10110000000000000000000000000000 A'
b00000000000000000000000000000000 +(
1q+
1s,
b10111111110000000000010000010000 =-
b00000000000000000000000000000000 E-
#77
0[$
1c$
0s,
#77
#78
b10111111110000000000010000010100 #
b00000000000000000000000000000000 +
b00000000000000000000000000000000 3
b10111111110000000000010000011000 ;
b000000 %!
0-!
1/"
17"
b000000 g"
b10111111110000000000010000011000 #$
1[$
0c$
b10111111110000000000010000010100 k$
b10111111110000000000010000011000 s$
b00000000000000000000000000000000 -%
b10111111110000000000010000010100 5%
b0000000000000000 ]%
b00000000000000000000000000 e%
b10110000000000000000000000000000 m%
b001000 7&
1?&
b00000000000000000000000000001000 )'
b10111111110000000000010000010100 1'
b10111111110000000000010000010000 9'
b10110000000000000000000000100000 A'
b10110000000000000000000000000000 +(
1C,
1s,
b10111111110000000000010000010100 =-
#79
0[$
1c$
0s,
#79
#80
0/"
07"
b00000000000000000000000000000000 #$
1[$
0c$
b000000 7&
0?&
b00000000000000000000000000000000 )'
b10111111110000000000010000011000 1'
b10111111110000000000010000010100 9'
b10110000000000000000000000000000 A'
1Y'
b10110000000000000000000000100000 +(
1s,
#81
0[$
1c$
0s,
#81
#82
b10111111110000000000010000011000 #
b00000000000000000000000000000100 ;
b00000000000000000000000000000100 #$
1[$
0c$
b00000000000000000000000000000000 k$
b00000000000000000000000000000100 s$
1{$
b10111111110000000000010000011000 5%
0Y'
b10110000000000000000000000000000 +(
1s,
b00000000000000000000000000000000 =-
#83
0[$
1c$
0s,
#83
#84
b00000000000000000000000000000100 #
1[$
0c$
1%%
b00000000000000000000000000000100 5%
b00000000000000000000000000000000 m%
b10111111110000000000010000011100 1'
b10111111110000000000010000011000 9'
1s,
#85
0[$
1c$
0s,
#85
#86
1[$
0c$
1W&
b00000000000000000000000000001000 1'
b00000000000000000000000000000100 9'
b00000000000000000000000000000000 A'
1s,
#87
0[$
1c$
0s,
#87
#88
1[$
0c$
1i'
b00000000000000000000000000000000 +(
1s,
#89
0[$
1c$
0s,
#89
#90
1[$
0c$
1;(
1s,
0%-
#91
0[$
1c$
0s,

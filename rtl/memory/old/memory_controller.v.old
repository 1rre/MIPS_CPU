/* moduledoc

   I'm not 100% sure how we're connecting our CPU to a testbench - presumably this will be the topmost block therefore I'll have to switch the logics and the wires.

*/

`include "src/memory/util.vh"

module memory_controller (

    // Inputs from CPU //
    input        write_enable, clock,
    input [31:0] read_address, write_address, write_data,

    // Outputs to CPU //
    output logic       wait_request,
    output logic[31:0] read_data,

    // Inputs from interconnect //
    input[1:0] response,
    input      read_valid, write_valid,

    // Outputs to interconnect //
    output logic[31:0] address,
    output logic [3:0] byte_enable, // Used for LB, LWL & LWR
    output logic       read, write, lock
  );
  
  always @(posedge clock) if (!wait_request) `do (
    if (write_enable) `do (
      lock <= 1;
      wait_request <= 1;
      write <= 1;
      address <= write_address;
      @(posedge clock);
      write <= 0;
    ) else `do (
      
    )
  )
endmodule